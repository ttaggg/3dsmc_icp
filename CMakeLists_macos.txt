cmake_minimum_required(VERSION 3.6)

set(CMAKE_CONFIGURATION_TYPES Debug Release CACHE TYPE INTERNAL FORCE)

project(3dsmc_icp)

set(Flann_INCLUDE_DIR /opt/homebrew/Cellar/flann/1.9.2_1)
include_directories(${Flann_INCLUDE_DIR}/include/)
link_directories(${Flann_INCLUDE_DIR}/lib/)

set(FREE_IMAGE_DIR /opt/homebrew/Cellar/freeimage/3.18.0)  
include_directories(${FREE_IMAGE_DIR}/include/)
link_directories(${FREE_IMAGE_DIR}/lib/)

set(LZ4_DIR /opt/homebrew/Cellar/lz4/1.9.4)  
include_directories(${LZ4_DIR}/include/)
link_directories(${LZ4_DIR}/lib/)

set(YAML_CPP_DIR /opt/homebrew/Cellar/yaml-cpp/0.8.0/)
include_directories(${YAML_CPP_DIR}/include/)
link_directories(${YAML_CPP_DIR}/lib/)

# Set C++ flags
set(CMAKE_CXX_STANDARD 14)

set(Open3D_DIR $ENV{HOME}/open3d_install/lib/cmake/Open3D/)
find_package(Open3D REQUIRED)

find_package(Ceres REQUIRED)
find_package(glog REQUIRED)
get_target_property(GLOG_DLL_PATH_DEBUG glog::glog IMPORTED_LOCATION_DEBUG)
get_target_property(GLOG_DLL_PATH_RELEASE glog::glog IMPORTED_LOCATION_RELEASE)

add_definitions("-D_DISABLE_EXTENDED_ALIGNED_STORAGE")

include_directories(include)
include_directories(external/data_utils)

set(HEADER_FILES 
    external/data_utils/Eigen.h
    external/data_utils/SimpleMesh.h
    external/data_utils/PointCloud.h
    external/data_utils/VirtualSensor.h
    include/Search.h
    include/ProcrustesAligner.h
    include/ICPOptimizer.h
    include/ICPConfiguration.h
    external/data_utils/FreeImageHelper.h
)

set(SOURCE_FILES 
    external/data_utils/FreeImageHelper.cpp
    src/Search.cpp
    src/ProcrustesAligner.cpp
    src/ICPOptimizer.cpp
    src/ICPConfiguration.cpp
)

add_executable(3dsmc_icp src/main.cpp ${HEADER_FILES} ${SOURCE_FILES})
target_link_libraries(3dsmc_icp ceres freeimage flann Eigen3::Eigen lz4 Open3D::Open3D yaml-cpp)
target_include_directories(3dsmc_icp PUBLIC ${Flann_INCLUDE_DIR} ${LZ4_DIR}, ${YAML_CPP_DIR})
